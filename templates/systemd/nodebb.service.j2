{#
SPDX-FileCopyrightText: 2023 Slavi Pantaleev
SPDX-FileCopyrightText: 2024 Nikita Chernyi
SPDX-FileCopyrightText: 2025 Suguru Hirahara

SPDX-License-Identifier: AGPL-3.0-or-later
#}

[Unit]
Description=NodeBB ({{ nodebb_identifier }})
{% for service in nodebb_systemd_required_services_list %}
Requires={{ service }}
After={{ service }}
{% endfor %}
{% for service in nodebb_systemd_wanted_services_list %}
Wants={{ service }}
{% endfor %}
DefaultDependencies=no

[Service]
Type=simple
Environment="HOME={{ devture_systemd_docker_base_systemd_unit_home_path }}"
ExecStartPre=-{{ devture_systemd_docker_base_host_command_sh }} -c '{{ devture_systemd_docker_base_host_command_docker }} stop -t {{ devture_systemd_docker_base_container_stop_grace_time_seconds }} {{ nodebb_identifier }} 2>/dev/null || true'
ExecStartPre=-{{ devture_systemd_docker_base_host_command_sh }} -c '{{ devture_systemd_docker_base_host_command_docker }} rm {{ nodebb_identifier }} 2>/dev/null || true'

{#
  --cap-drop=ALL and --read-only prevent the service from working properly
#}
ExecStartPre={{ devture_systemd_docker_base_host_command_docker }} create \
      --rm \
      --name={{ nodebb_identifier }} \
      --log-driver=none \
      --user={{ nodebb_uid }}:{{ nodebb_gid }} \
      --network={{ nodebb_container_network }} \
      {% if nodebb_container_http_host_bind_port %}
      -p {{ nodebb_container_http_host_bind_port }}:{{ nodebb_container_http_port }} \
      {% endif %}
      --env-file={{ nodebb_base_path }}/env \
      --label-file={{ nodebb_base_path }}/labels \
      --mount type=bind,src={{ nodebb_base_path }}/setup.json,dst=/usr/src/app/setup.json,ro \
      --mount type=bind,src={{ nodebb_build_path }},dst=/usr/src/app/build \
      --mount type=bind,src={{ nodebb_config_path }},dst=/opt/config \
      --mount type=bind,src={{ nodebb_uploads_path }},dst=/usr/src/app/public/uploads \
      {% for volume in nodebb_container_additional_volumes %}
      --mount type={{ volume.type | default('bind' if '/' in volume.src else 'volume') }},src={{ volume.src }},dst={{ volume.dst }}{{ (',' + volume.options) if volume.options else '' }} \
      {% endfor %}
      {% for arg in nodebb_container_extra_arguments %}
      {{ arg }} \
      {% endfor %}
      {{ nodebb_container_image_self_build_name if nodebb_container_image_self_build else nodebb_container_image }}

{% for network in nodebb_container_additional_networks %}
ExecStartPre={{ devture_systemd_docker_base_host_command_docker }} network connect {{ network }} {{ nodebb_identifier }}
{% endfor %}

ExecStart={{ devture_systemd_docker_base_host_command_docker }} start --attach {{ nodebb_identifier }}

ExecStop=-{{ devture_systemd_docker_base_host_command_sh }} -c '{{ devture_systemd_docker_base_host_command_docker }} stop -t {{ devture_systemd_docker_base_container_stop_grace_time_seconds }} {{ nodebb_identifier }} 2>/dev/null || true'
ExecStop=-{{ devture_systemd_docker_base_host_command_sh }} -c '{{ devture_systemd_docker_base_host_command_docker }} rm {{ nodebb_identifier }} 2>/dev/null || true'

Restart=always
RestartSec=30
SyslogIdentifier={{ nodebb_identifier }}

[Install]
WantedBy=multi-user.target
