# SPDX-FileCopyrightText: 2023 Julian-Samuel GebÃ¼hr
# SPDX-FileCopyrightText: 2023 MASH project contributors
# SPDX-FileCopyrightText: 2023 - 2025 Slavi Pantaleev
# SPDX-FileCopyrightText: 2025 Suguru Hirahara
#
# SPDX-License-Identifier: AGPL-3.0-or-later

---
- name: (Deprecation) Catch and report renamed settings
  ansible.builtin.fail:
    msg: >-
      Your configuration contains a variable, which now has a different name.
      Please change your configuration to rename the variable (`{{ item.old }}` -> `{{ item.new }}`).
  when: "lookup('ansible.builtin.varnames', ('^' + item.old + '$'), wantlist=True) | length > 0"
  with_items:
    - { "old": "searxng_instance_name", "new": "searxng_config_searxng_instance_name" }
    - { "old": "searxng_secret_key", "new": "searxng_config_server_secret_key" }
    - { "old": "searxng_enable_rate_limiter", "new": "<Removed; setting `searxng_redis_hostname` enables the rate limiter>" }
    - { "old": "searxng_enable_image_proxy", "new": "searxng_config_server_image_proxy" }
    - { "old": "searxng_public_instance", "new": "searxng_config_public_instance" }
    - { "old": "searxng_extra_configuration_snippets", "new": "searxng_config_additional_configurations" }
    - { "old": "searxng_rate_limiter_extra_configuration", "new": "searxng_limiter_additional_configurations" }
    - { "old": "searxng_base_url", "new": "searxng_environment_variables_searxng_base_url" }
    - { "old": "searxng_autocomplete", "new": "<Removed; please configure manually>" }
    - { "old": "searxng_rate_limiter_config_valkey_hostname", "new": "searxng_redis_hostname" }
    - { "old": "searxng_basic_auth_enabled", "new": "<Removed; please set up a dedicated service for authentication>" }
    - { "old": "searxng_basic_auth_username", "new": "<Removed; please set up a dedicated service for authentication>" }
    - { "old": "searxng_basic_auth_password", "new": "<Removed; please set up a dedicated service for authentication>" }

- name: Fail if required SearXNG settings not defined
  ansible.builtin.fail:
    msg: >-
      You need to define a required configuration setting (`{{ item }}`).
  when: "lookup('vars', item, default='') | string | length == 0"
  with_items:
    - searxng_uid
    - searxng_gid
    - searxng_hostname
    - searxng_path_prefix
    - searxng_container_network
    - searxng_config_server_secret_key

- name: Run if Traefik is enabled
  when: searxng_container_labels_traefik_enabled | bool
  block:
    - name: Fail if Traefik settings required for SearXNG are not defined
      ansible.builtin.fail:
        msg: >-
          You need to define a required configuration setting (`{{ item }}`).
      when: "lookup('vars', item, default='') | string | length == 0"
      with_items:
        - searxng_container_labels_traefik_hostname
        - searxng_container_labels_traefik_path_prefix

    # We ensure it doesn't end with a slash, because we handle both (slash and no-slash).
    # Knowing that `searxng_container_labels_traefik_path_prefix` does not end with a slash
    # ensures we know how to set these routes up without having to do "does it end with a slash" checks elsewhere.
    - name: Fail if searxng_container_labels_traefik_path_prefix ends with a slash
      ansible.builtin.fail:
        msg: >-
          searxng_container_labels_traefik_path_prefix (`{{ searxng_container_labels_traefik_path_prefix }}`) must either be `/` or not end with a slash (e.g. `/searxng`).
      when: "searxng_container_labels_traefik_path_prefix != '/' and searxng_container_labels_traefik_path_prefix[-1] == '/'"
